#Server
server.port = 8081

#connect mysql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/ecommerce
spring.datasource.username=root
spring.datasource.password=


spring.main.allow-bean-definition-overriding=true

#jpa
#spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true


# Hibernate ddl auto (create, create-drop, validate, update, none)
spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL57Dialect

#
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

#image
multipart.enabled=true
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB

#error page
#server.error.whitelabel.enabled=false

#Send mail
#spring.mail.protocol=smtp
#spring.mail.default-encoding=UTF-8
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=quoctruong11tv@gmail.com
spring.mail.password=pgkybcgivxmypjdx
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#@Bean
#public ModelMapper modelMapper() {
#return new ModelMapper();
#}
#@Autowired
#private ModelMapper modelMapper;
#//        Conver DTO -> Entity
#Staff entity = modelMapper.map(staffDTO, Staff.class);
#//          Entity -> DTO
#StaffDTO staffDTO = modelMapper.map(staff.get(), StaffDTO.class);


